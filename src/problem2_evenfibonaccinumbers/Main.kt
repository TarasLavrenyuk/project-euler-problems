package problem2_evenfibonaccinumbers

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
object Main {

  @JvmStatic
  fun main(args: Array<String>) {
    println(getSumOfEvenValuedFibNumberLessThan4Millions())
  }

  private fun getSumOfEvenValuedFibNumberLessThan4Millions(): Long {
    var prev: Long = 1
    var current: Long = 2
    var result: Long = 2
    var next: Long
    while (true) {
      next = prev + current
      if (next > 4000000L)
        break
      if (next.rem(2) == 0L)
        result += next
      prev = current
      current = next
    }
    return result
  }
}